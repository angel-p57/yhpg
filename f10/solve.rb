def n2z n
  r=Math.sqrt(n-1).to_i
  Complex(*[(r+1)**2-n,r,n-r*r-1][(r*r+r)/n,2].rotate(r%2))
end

def z2n z
  t,r=(x,y=z.rect).minmax
  t<0 ? nil : r*r+r+(r%2*2-1)*(x-y)+1
end

def solve input
  # implement
  z=n2z(input.to_i)
  [-1i,1i,-1,1].map{|d|z2n(z+d)||?-}*?,
end

def test(n,input,expected)
  actual=solve(input).to_s
  puts "#{n}: "+(actual==expected ? "ok":"ng ( #{actual} against #{expected} for #{input} )")
end

# test cases below
test( 0, "10", "9,25,-,11" )
test( 1, "1", "-,2,-,4" )
test( 2, "2", "1,9,-,3" )
test( 3, "4", "-,3,1,5" )
test( 4, "26", "25,49,-,27" )
test( 5, "72", "71,73,57,93" )
test( 6, "82", "81,121,-,83" )
test( 7, "100", "-,99,65,101" )
test( 8, "122", "121,169,-,123" )
test( 9, "141", "142,140,104,148" )
test( 10, "145", "-,146,144,196" )
test( 11, "320", "321,319,261,329" )
test( 12, "504", "503,505,465,557" )
test( 13, "563", "564,562,498,590" )
test( 14, "906", "905,907,895,1019" )
test( 15, "1047", "1046,1048,1002,1134" )
test( 16, "1111", "1068,1204,1110,1112" )
test( 17, "1338", "1257,1401,1339,1337" )
test( 18, "1613", "1612,1614,1588,1752" )
test( 19, "1845", "1686,1854,1846,1844" )
test( 20, "1921", "1922,1920,1780,1952" )
test( 21, "2517", "2516,2518,2484,2688" )
test( 22, "2670", "2671,2669,2535,2739" )
test( 23, "2798", "2613,2821,2799,2797" )
test( 24, "2841", "2778,2994,2840,2842" )
test( 25, "2896", "2897,2895,2725,2937" )
test( 26, "3050", "3001,3225,3049,3051" )
test( 27, "3354", "3355,3353,3147,3375" )
test( 28, "3563", "3564,3562,3402,3638" )
test( 29, "4454", "4261,4525,4455,4453" )
test( 30, "5397", "5262,5558,5396,5398" )
test( 31, "5592", "5363,5659,5593,5591" )
test( 32, "6122", "6121,6123,6047,6363" )
test( 33, "6772", "6771,6773,6677,7009" )
